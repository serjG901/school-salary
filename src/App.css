#root {
    text-align: center;
    min-width: 300px;
    width: 100%;
}

button,
summary,
input {
    border-radius: 8px;
    border: 1px solid transparent;
    padding: 0.6em 1.2em;
    font-size: 1em;
    font-weight: 500;
    font-family: inherit;
    background-color: var(--color-bg-button);
    cursor: pointer;
    transition: border-color 0.25s;
}
button:hover,
summary:hover,
input:hover {
    border-color: var(--color-border-button);
}
button:focus,
button:focus-visible,
summary:focus,
summary:focus-visible,
input:focus,
input:focus-visible {
    outline: 4px auto -webkit-focus-ring-color;
}

details:has(details) {
    margin: 2rem 0;
    background-color: var(--color-bg-details);
    border-radius: 8px;
    width: 100%;
}

details > details {
    width: 70%;
    opacity: 0.8;
    margin: 1rem auto;
    border: 1px solid var(--color-border-details);
    border-radius: 8px;
    box-shadow: 1px 1px 8px rgb(0 0 0 /0.2), -1px 1px 8px rgb(0 0 0 /0.2);
}

form {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-bottom: 1rem;
}

label {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 1.5rem 0 0 0;
}

label:has(input[type="checkbox"]) {
    background-color: var(--color-bg-not-confirm);
    cursor: pointer;
    margin-bottom: 1.5rem;
}

label:has(input[type="checkbox"]:checked) {
    background-color: var(--color-bg-confirm);
}

input[type="date"] {
    color: transparent;
}

input[type="date"]:focus,
input[type="date"]:valid {
    color: inherit;
}

label > span {
    position: absolute;
    transition: transform 0.3s linear;
}

label:has(input:focus) > span {
    transform: translateY(-2rem);
}

label:has(input:valid) > span {
    transform: translateY(-2rem);
}

.tasks,
.payments {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    max-width: 90vw;
    padding: 1rem;
}

.payment,
.task {
    display: flex;
    flex-direction: column;
    gap: 8px;
    word-break: break-word;
    padding: 1rem;
    max-width: 50%;
    justify-content: space-around;
    align-items: center;
    border: 1px solid var(--color-border-card);
    border-radius: 8px;
    box-shadow: 1px 1px 8px rgb(0 0 0 /0.2), -1px 1px 8px rgb(0 0 0 /0.2);
    opacity: 0.8;
}

.payment > div,
.task > div {
    padding: 0 4px;
}

.cost,
.amount {
    font-size: 2rem;
    font-weight: 700;
}

.cost {
    color: var(--color-task-cost);
}

.amount {
    color: var(--color-payment-amount);
}

.confirm {
    width: calc(100% + 2rem);
}

.confirm[data-confirm="Confirm"] {
    background-color: var(--color-bg-confirm);
}

.confirm[data-confirm="Not confirm"] {
    background-color: var(--color-bg-not-confirm);
}

.salary {
    display: grid;
    grid-template:
        "balance balance"
        "sumtasks sumpayments";
    padding: 2rem;
}

.salary > div > div:last-child {
    color: var(--color-balance-description);
    font-size: 1rem;
}

.balance {
    grid-area: balance;
    font-size: 4rem;
    font-weight: 700;
    color: var(--color-balance);
}

.balance[data-balance="-"] {
    color: var(--color-balance-minus);
}

.sum-tasks {
    grid-area: sumtasks;
    font-size: 2rem;
    font-weight: 700;
    color: var(--color-summ-tasks);
}

.sum-payments {
    grid-area: sumpayments;
    font-size: 2rem;
    font-weight: 700;
    color: var(--color-summ-payments);
}

.popover {
    border: 1px solid var(--color-border-card);
    border-radius: 8px;
    box-shadow: 1px 1px 8px rgb(0 0 0 /0.2), -1px 1px 8px rgb(0 0 0 /0.2);
    background-color: var(--color-bg-details);
}

.popover::backdrop {
    background-color: rgb(0 0 0 /0.5);
}

.popover form {
  padding: 2rem;
}
